<!DOCTYPE module PUBLIC
    "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
    "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--
    This configuration file was written by the eclipse-cs plugin configuration editor
-->
<!--
    Checkstyle-Configuration: wetator-test
    Description: none
-->
<module name="Checker">
  <property name="charset" value="UTF-8"/>
  <property name="severity" value="warning"/>
  <module name="TreeWalker">
    <!-- Annotations -->
    <module name="AnnotationLocation">
      <property name="tokens" value="CLASS_DEF,INTERFACE_DEF,ENUM_DEF,METHOD_DEF,CTOR_DEF"/>
    </module>
    <module name="AnnotationLocation">
      <property name="allowSamelineMultipleAnnotations" value="true"/>
      <property name="allowSamelineParameterizedAnnotation" value="true"/>
      <property name="tokens" value="VARIABLE_DEF"/>
    </module>
    <module name="AnnotationUseStyle">
      <property name="elementStyle" value="compact"/>
    </module>
    <module name="MissingDeprecated"/>
    <module name="MissingOverride">
      <property name="severity" value="error"/>
    </module>

    <!-- Block Checks -->
    <module name="AvoidNestedBlocks"/>
    <module name="EmptyBlock">
      <property name="option" value="text"/>
    </module>
    <module name="EmptyCatchBlock"/>
    <module name="LeftCurly"/>
    <module name="NeedBraces"/>
    <module name="RightCurly"/>

    <!-- Class Design -->
    <module name="FinalClass"/>
    <module name="HideUtilityClassConstructor"/>
    <module name="InterfaceIsType"/>

    <!-- Coding -->
    <module name="CovariantEquals"/>
    <module name="DefaultComesLast"/>
    <module name="EmptyStatement"/>
    <module name="EqualsAvoidNull"/>
    <module name="EqualsHashCode"/>
    <module name="ExplicitInitialization"/>
    <module name="FallThrough"/>
    <module name="HiddenField"/>
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean, java.lang.Integer, java.lang.Double, java.lang.Float, java.lang.Character, java.lang.Long, java.lang.Short, java.lang.Byte"/>
    </module>
    <module name="IllegalType"/>
    <module name="InnerAssignment"/>
    <module name="MissingSwitchDefault"/>
    <module name="MultipleVariableDeclarations"/>
    <module name="NoFinalizer"/>
    <module name="OneStatementPerLine"/>
    <module name="PackageDeclaration"/>
    <module name="ParameterAssignment"/>
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
    <module name="StringLiteralEquality"/>
    <module name="SuperClone"/>
    <module name="SuperFinalize"/>
    <module name="UnnecessaryParentheses"/>
    <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
    <module name="UnnecessarySemicolonInEnumeration"/>
    <module name="UnnecessarySemicolonInTryWithResources"/>

    <!-- Imports -->
    <module name="AvoidStarImport">
      <property name="excludes" value="org.mockito.Mockito,org.mockito.ArgumentMatchers,org.junit.Assert"/>
    </module>
    <module name="AvoidStaticImport">
      <property name="excludes" value="java.util.stream.Collectors.*,org.mockito.Mockito.*,org.mockito.ArgumentMatchers.*,org.junit.Assert.*,org.wetator.backend.htmlunit.finder.HtmlCodeCreator.*"/>
    </module>
    <module name="IllegalImport"/>
    <module name="RedundantImport"/>
    <module name="UnusedImports"/>

    <!-- Javadoc Comments -->
    <module name="InvalidJavadocPosition"/>
    <module name="JavadocType">
      <property name="authorFormat" value="\S"/>
    </module>
    <module name="NonEmptyAtclauseDescription"/>

    <!-- Miscellaneous -->
    <module name="ArrayTypeStyle"/>
    <module name="OuterTypeFilename"/>
    <module name="UpperEll"/>

    <!-- Modifiers -->
    <module name="ModifierOrder"/>
    <module name="RedundantModifier"/>

    <!-- Naming Conventions -->
    <module name="AbstractClassName">
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
      <property name="ignoreModifier" value="true"/>
    </module>
    <module name="CatchParameterName">
      <property name="format" value="^e([A-Z][a-zA-Z0-9]*)?$"/>
    </module>
    <module name="ClassTypeParameterName">
      <property name="format" value="^[A-Z][A-Z]*$"/>
    </module>
    <module name="ConstantName"/>
    <module name="FinalLocalVariable">
      <property name="tokens" value="VARIABLE_DEF,PARAMETER_DEF"/>
    </module>
    <module name="InterfaceTypeParameterName">
      <property name="format" value="^[A-Z][A-Z]*$"/>
    </module>
    <module name="LambdaParameterName"/>
    <module name="LocalFinalVariableName">
      <property name="format" value="^((tmp|e)[A-Z][a-zA-Z0-9]*|i|j|k|e)$"/>
    </module>
    <module name="LocalVariableName">
      <property name="format" value="^(tmp[A-Z][a-zA-Z0-9]*|i|j|k)$"/>
      <property name="allowOneCharVarInForLoop" value="true"/>
    </module>
    <module name="MemberName"/>
    <module name="MethodName">
      <property name="format" value="^[a-z][a-zA-Z0-9_]*$"/>
    </module>
    <module name="MethodTypeParameterName">
      <property name="format" value="^[A-Z][A-Z]*$"/>
    </module>
    <module name="PackageName">
      <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$"/>
    </module>
    <module name="ParameterName">
      <property name="format" value="^an?[A-Z][a-zA-Z0-9]*$"/>
    </module>
    <module name="StaticVariableName"/>
    <module name="TypeName">
      <property name="tokens" value="CLASS_DEF,ENUM_DEF,ANNOTATION_DEF"/>
    </module>
    <module name="TypeName">
      <property name="format" value="^I[A-Z][a-zA-Z0-9]*$"/>
      <property name="tokens" value="INTERFACE_DEF"/>
    </module>

    <!-- Whitespace -->
    <module name="EmptyForInitializerPad"/>
    <module name="EmptyForIteratorPad"/>
    <module name="GenericWhitespace"/>
    <module name="MethodParamPad"/>
    <module name="NoWhitespaceAfter">
      <property name="tokens" value="BNOT,DEC,DOT,INC,LNOT,UNARY_MINUS,UNARY_PLUS"/>
    </module>
    <module name="NoWhitespaceBefore"/>
    <module name="NoWhitespaceBefore">
      <property name="allowLineBreaks" value="true"/>
      <property name="tokens" value="DOT"/>
    </module>
    <module name="OperatorWrap"/>
    <module name="ParenPad"/>
    <module name="TypecastParenPad">
      <property name="tokens" value="RPAREN,TYPECAST"/>
    </module>
    <module name="WhitespaceAfter"/>
    <module name="WhitespaceAround">
      <property name="allowEmptyConstructors" value="true"/>
      <property name="allowEmptyMethods" value="true"/>
    </module>
  </module>

  <!-- Whitespace -->
  <module name="FileTabCharacter">
    <property name="eachLine" value="true"/>
  </module>

  <!-- Header -->
  <module name="Header">
    <property name="header" value="/*\n * Copyright (c) 2008-2021 wetator.org\n *\n * Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n"/>
  </module>
</module>
