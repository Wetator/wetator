frank.danek 2010-12-02 23:00: hallo ronald. für diese ganze event-geschichte wäre es, glaube ich, ziemlich nützlich, wenn wir mal definieren, was
	die actionen bei den verschiedenen controls eigentlich bedeuten (sollen). ich schreib da mal was zusammen, wenn ich wieder zeit habe. aber
	heute nicht mehr...

frank.danek 2010-12-06 21:20: ich habe das angekündigte dokument mal erstellt -> actions.txt
	da stehen noch ein paar TODOs drin, die wir mal diskutieren sollten.

	Außerdem habe ich bei den tests etwas umorganisiert und aufgeräumt. der standard sind ab jetzt die .wet tests und nicht länger die .xls tests.

frank.danek 2010-12-12 12:45: hallo ronald, kannst du bitte die webpage neu hochladen? ich habe das thema dtd/xsd glatt gezogen. aber damit das ticket
	geschlossen werden kann, muss die homepage einmal aktualisiert werden.

rbri 2010-12-12 14:45: hi frank, habe das xsd verzeichnis aktualisiert. Reicht das?
rbri 2010-12-24 14:08: Habe gestern mal angefangen mit PMD rumzuspielen. Die Checken auch, ob möglichst alles als final markiert ist. Es soll wohl
    dem Compiler helfen. Deshlab habe ich das mal im Checkstyle angeschaltet. Die fehlenden final's baue ich ein.

frank.danek 2011-01-25 00:35: Hi ihr, ich habe gerade das Checkstyle auf Version 5.3.0 gehoben. Damit die Checks wieder richtig laufen, werdet ihr wohl
	euer Eclipse auch updaten müssen. Leider hat der Eclipse-Checkstyle-Config-Editor einen Bug: Man kann einen Check nicht korrekt konfigurieren. Das
	muss man dann per XML wieder glatt bügeln. Es geht um:
	<module name="AbstractClassName">
      <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
      <property name="ignoreModifier" value="true"/>
    </module>
    Die Property ignoreModifier ist dem Editor leider unbekannt. :( Also falls ihr mal was an der Checkstyle-Config ändert, bitte diese Zeile wieder
    manuell ins XML packen. Ansonsten habe ich alle alten und neuen Warnings bereits entfernt. Wehe ich sehe da irgendwann neue drin!!
    LAW AND ORDER RULZ! >:D

    Außerdem habe ich ein paar Libraries aktualisiert. @Ronald: es gibt eine neue Version vom Automaton. Kannst du die bitte in dein Repository
    packen und dann hier einbinden? Danke!

frank.danek 2011-04-16 12:55: Hi Ronald. Deine Umstellung der Homepage hat leider die openUrlRedirect Tests kaputt gemacht, weil die testcases nicht
	mehr online sind. Kannst du das wieder irgendwie hinbekommen oder müssen wir die Tests umstellen? Und was machen wir mir dem HtmlUnit-Problem bei
	der Gebit-Seite?

frank.danek 2011-04-20 20:58: Nabend! Ich habe heute einen Branch für die Entwicklung des neuen XML Scripters geöffnet und alles, was ich bisher so
	gebastelt hatte, da mal reingepackt. Ergebnis: Das läuft schon! :)
	Jetzt stellen sich aber ein paar Fragen:
	1. Wie soll der neue neue Scripter heißen? Zur Zeit heißt er XmlScripter2, was ziemlich blöd ist.
	2. Das Interface für die Scripter heißt WetScripter. Sollten wir nicht mal versuchen, das "Wet"-Prefix loszuwerden? Aber was dann: Scripter oder
		IScripter? Ziehen wir das dann auch einheitlich durch?
	3. Scripter als Name für 2. ist jedoch schon von einem Enum belegt. Das müsste man dann umbauen oder auflösen (siehe 5.).
	4. Hinweis: Wenn wir 2. machen, wäre WetScripter als Name für 1. frei... ;)
	5. Zur Zeit konfiguriert man die Scripter in der .config, indem man da "XML" oder "XLS" angibt. Das wird dann über ein Enum zum eigentlichen
		Scripter aufgelöst. Das ist nicht wirklich erweiterbar, da so nur Scripter unterstützt werden, die in diesem Enum sind. Flexibler wäre es,
		wenn man in der .config einfach den FullQualifiedName angibt und unsere weiterhin per default hinzugefügt werden. Damit könnte das Enum
		wegfallen.
	6. Was wird aus dem ScriptConverter/ScriptCreator. Das wäre nochmal ein ordentliches Stück Arbeit, davon einen für den neuen Scripter zu bauen.
		Perspektivisch würde ich sowas auch eher im WTE sehen. (@Tobias: oder?)

tobwoerk 2011-04-21 18:36: Hi.
    1. Ich würde ihn XmlScripter nennen und den alten umbenennen oder wegtun.
    2. Ich vote für IScripter.
    3. Wir nehmen ja IScripter.
    4. Du machst mich bekloppt. WetScripter finde ich aber in der Tat spannend. Und da ich mich bei 1. noch nicht geäußert habe - warum nicht WetScripter?!
    5. Klingt vernünftig.
    6. Wir müssen ein Konzept für Abwärtskompatibilität besprechen. Das gehört mit dazu. Im Grunde brauchen wir alle Scripter, die es jemals gab
       und (jeweils) einen Writer für die neuesten Formate. Ich bin mir nicht sicher, ob das nicht sogar extra sollte?!

rbri 2011-04-28 20:30:
    > 1. Ich würde ihn XmlScripter nennen; den alten nach DeclinedXmlScripter umbenennen.
    > 2. IScripter und das I-Pattern für alle Interfaces durchziehen. Wetator steht ja schon im Package.
    > 3. -
    > 4. ich bin dafür Wet ganz wegzuwerfen
    > 5. Nö, da kann man nur die Liste der verfügbaren Scripter erweitern.
         Die Auswahl des Scripters passiert in org.wetator.core.WetEngine.readCommandsFromFile(File). Dort wird die Liste der Scripter durchgegangen,
         und dann jeder gefragt, ob er sich für die Datei zuständig fühlt. Wenn ja, dann musss der die Datei lesen.
         Dieses Verfahren würde ich folgendermaßen erweitern.
         a) die Liste wird von hinten nach vorne abgearbeitet, damit sich Eigencreationen vordrängeln können
         b) die Entscheidung ob ein Scripter es versuchen möchte und der eigentliche Versuch laufen nacheinander in der Loop ab
         Wenn ein Scripter die Datei akzeptiert, und auch noch ohne Exeption (ggf. spezielle Exeption) liest, dann -> fertig
         Wenn ein Scripter die Datei akzeptiert, dann aber beim Lesen der Commands eine Exeption wirft, dann wird anders
         als bisher die Liste weiter abgearbeitet.
         Ggf. müssen wir dann die Fehlermeldungen noch ein wenig verbessern.
         So könnten wir sogar den DeclinedXmlScripter noch eine Weile mitlaufen lassen.
    > 6. Alte lesen, aber nur das neuste Schreiben finde ich ausreichend. Eventuell noch mit einer Warnung nach dem Lesen.
         Damit würde das Konvertieren implizit vom WTE erledigt. Hätte den Charme, das wir keine (weiteres) GUI bauen müssen.

frank.danek 2011-05-07 00:15: Nabend! Soweit ich das sehe ist der neue XMLScripter fertig und im Branch eingecheckt. Folgendes haben wir jetzt:
	- neuer XmlScripter mit Tests
	- der alte XmlScripter heißt jetzt LegacyXmlScripter und hat (neue) Tests
	- neuer XmlScriptCreator mit manuellem Test
	- der alte XmlScriptCreator heißt jetzt LegacyXmlScriptCreator
	- der WetScriptConverter wurde in den WetatorScriptConverter integriert
	- Commands werden von allen Scriptern in Kleinbuchstaben mit - als Trenner normalisiert
		=> in den Tests bleibt alles wie bisher
		=> in den CommandSets heißen die jetzt z.B. assert-content
	- ich musste dafür leider einige der Tests anpassen, die assert-fail verwenden, da im Text (einer Fehlermeldung) der Command Name stand :(
	- ach ja: neue XSDs für neue XML/WET-Tests

	Aus meiner Sicht ist das neue also fertig und Abwärtskompatibel und wir müssten das in den Trunk mergen können.

frank.danek 2011-05-11 22:45: Es ist angerichtet! Der neue XMLScripter ist im Trunk, alle Test laufen -> sieht gut aus!
	Next Stop: kill the wet-prefix

frank.danek 2011-08-02 23:10: Nabend! Brauchen wir den Inhalt des Verzeichnisses webpages noch?
	- dtd -> würde ich sagen, kann weg
	- testcases -> brauchen wir noch!
	- xsd -> brauchen wir noch!
	- Rest -> kann meines Erachtens weg
	@rbri: ich würde gerne das wetator-jenkins-plugin auf der Homepage anbieten. Aber irgendwie habe ich keinen Plan, wie ich das in das gleiche
	Verzeichnis bekomme, wie die restlichen Downloads. Hilfe!
	Davon abgesehen habe ich gerade die neuen XSDs hochgeladen. Die sind also ab sofort unter /xsd/* verfügbar.
	@all: der WTE funktioniert unter Indigo und auch sonst scheint das zumindest nicht schlechter zu funktionieren als Helios. Spricht irgendetwas
	gegen einen Umzug? (außer, dass ihr ein neues Eclipse einrichten müsstet)

frank.danek 2011-08-28 19:45: Ich habs dann einfach mal gemacht:
	- unsere IDE ist jetzt Eclipse Indigo (3.7).
	- das Verzeichnis webpages ist aufgelöst.
	Des weiteren habe ich unseren Track etwas aufgeräumt bzgl. der XSDs issues.
	Als nächstes würde ich mich jetzt an das Exception Handling setzen...

	Ach ja, wir haben jetzt eine Warning im StdOutProgressListener. @rbri: kannst du dir das bitte mal anschaun?

frank.danek 2012-03-22 22:55: @rbri: Warum hat das Projekt Warnings? Warum laufen die Tests nicht durch?
	Da lässt man dich mal 5 Minuten aus den Augen... tztztz ;)

rbri 2012-03-28 20:48: Warnungen sind wech, die Tests sind gefixt